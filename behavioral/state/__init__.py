"""
Поведенческий паттерн проектирования - состояние.

pattern.py
    Паттерн позволяет инкапсулировать логику зависящую от условия/состояния.
    Объект с набором контекстов, может оперативно менять свое состояние,
    при этом соблюдается единственность интерфейса и уменьшение упразднение
    условных конструкций.

example.py
    Для примера возьмем ДВС в температурном контексте. В зависимости от
    текущей температуры двигателя меняется результат работы электроники:
        - холодный старт - охлаждение выключено, допускается повышение
        оборотов
        - теплый старт - охлаждение выключено, допускается повышение
        оборотов
        - повышенная температура - охлаждение включено, допускается
        повышение оборотов
        - высокая температура - охлаждение включено, не допускается
        повышение оборотов

    Сам двигатель имеет два метода:
        - увеличение числа оборотов
        - уменьшение числа оборотов
"""

from .example import (
    ColdStartState,
    ExtremeTemperatureState,
    GasolineEngine,
    HighTemperatureState,
    HotStartState,
)

__all__ = [
    "ColdStartState",
    "ExtremeTemperatureState",
    "GasolineEngine",
    "HighTemperatureState",
    "HotStartState",
]
