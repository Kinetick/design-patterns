"""
Структурный паттерн проектирования - адаптер.

О паттерне:
    Паттерн позволяет адаптировать интерфейс одного класса к интерфейсу
    другого класса. Для адаптации используется агрегация адаптируемого
    набора интерфейсов.

Когда использовать:
    - если имеется класс реализующий подходящую логику, однако интерфейс не
    подходит для использования
    - если имеется класс, который нужно использовать совместно с другими
    классами, но интерфейсы не совместимы

Пример:
    Предположим, что у нас есть две библиотеки для для загрузки файлов с
    сайтов, синхронная и асинхронная. Каждая библиотека предоставляет свой
    загрузчик, со своим интерфейсом, моделью ответа и логикой.

    Мы хотим использовать в проекте, как синхронный, так и асинхронный
    загрузчик для клиента. При этом, код клиента уже был спроектирован для
    работы с синхронным загрузчиком.

    Интерфейс клиента:
        - добавить ресурс в пул загружаемых ресурсов
        - инициировать процесс загрузки

    Интерфейс синхронного загрузчика:
        - синхронная загрузка, пакета документов
        - list[SyncResponse] - результат работы синхронного загрузчика

    Интерфейс асинхронного загрузчика:
        - асинхронная загрузка, пакета документов
        - list[AsyncResponse] - результат работы асинхронного загрузчика
"""
